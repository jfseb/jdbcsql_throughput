{"version":3,"sources":["../src/runinfork.ts"],"names":[],"mappings":"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","file":"runinfork.js","sourcesContent":["import { SQLExec } from \"./sqlexec\";\nimport { ISQLExecutor } from \"./constants\";\n\nconsole.log('I AM RUNNING THE FORK!' + process.argv[2]);\nvar root = './gen';\n\nvar debug = require('debug');\nconst debuglog = debug('runinfork');\n\nvar fs = require('fs');\nvar cfgdata = undefined;\nvar sqlexec = undefined;\nvar testpool = undefined;\n/*\ntry {\nvar dataf = fs.readFileSync('jdbcsql_config.json');\n    cfgdata = JSON.parse(dataf);\n} catch(e)\n{\n  console.log('could not read ./jdbcsql_config.json, falling back to default config' + e)\n}*/\n\nvar root = `${__dirname}/../`; // eslint-disable-line\nvar defaultConfig = {\n  classpath : [\n  root + './drivers/hsqldb.jar',\n  root + './drivers/derby.jar',\n  root + './drivers/derbyclient.jar',\n  root + './drivers/derbytools.jar'],\n  config : {\n      url: 'jdbc:hsqldb:hsql://localhost/xdb',\n      user: 'SA',\n      logging : 'info',\n      password: '',\n      minpoolsize: 2,\n      maxpoolsize: 50\n      //  properties : {user: '', password : ''}\n    }\n  };\n\nvar executor : ISQLExecutor = undefined;\n\nfunction SetupOnce(cfgdata) {\n  console.log('IN FORK Setup got config ' + JSON.stringify(cfgdata));\n  cfgdata = cfgdata || defaultConfig;\n  if(!cfgdata.config) {\n    cfgdata = defaultConfig;\n  }\n  console.log('IN FORK amended config ' + JSON.stringify(cfgdata));\n\n  var path = require('path');\n  var jinst = require('jdbc/lib/jinst');\n  if (!jinst.isJvmCreated()) {\n   console.log('adding drivers from ' + cfgdata.classpath);\n    jinst.addOption('-Xrs');\n    jinst.setupClasspath(cfgdata.classpath);\n  }\n  var Pool = require('jdbc');\n  var config = cfgdata.config;\n  testpool = new Pool(config);\n  testpool.initialize(function() {});\n  sqlexec = require('./sqlexec.js');\n  console.log('FORK configured!');\n  executor = new sqlexec.SQLExec().makeRunner(testpool);\n\n}\n// /scripts/start_cluster.py --num-relational 1 --num-series 0 --num-docstore 0 --num-disk 0 --num-graph 0  --tc-port=2202  --set-config relational.max_memory=250000000 --reconfigure-interval 3\n// /SAPDevelop/hanalite/build/Release/v2client  -clocalhost:2202 -s /SAPDevelop/hanalite_rel_bench/sample_data/gen.viewdef.sql\n// v2client -c127.0.0.1 -s sample_data/tcp_viewdef.sql\n\n\n// this executable listens to single query requests (without any synchronization etc)\n// and runs them\nprocess.on('message', (m) => {\n  if(m && m.cfgdata) {\n    SetupOnce(m.cfgdata);\n    return;\n  }\n  debuglog('IN FORK got ' + JSON.stringify(m));\n  if(!m.statement) {\n    return;\n  }\n  executor.execStatement(m.statement).then( res =>\n    {\n      var m2 =  { handle : m.handle, result : res.result , err : undefined };\n      debuglog(' in fork send result' + JSON.stringify(m2));\n      process.send(m2);\n    }\n  ).catch( err => {\n    try {\n      err = err.toString();\n    } catch (e) {\n    }\n    var m2 =  { handle : m.handle, result : undefined, err : err};\n    console.log(' in fork send Err result' + JSON.stringify(m2));\n    process.send( m2 );\n  }\n)\n});\nconsole.log('I HAVE REGISTERED THE HANDLER!');"],"sourceRoot":"."}